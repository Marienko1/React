{"version":3,"sources":["Components/FeedbackButtons/feedbackbuttons.module.css","Components/Statistics/stats.module.css","Components/Section/section.module.css","Components/Notification/notification.module.css","Components/FeedbackButtons/FeedbackButtons.jsx","Components/Statistics/Stats.js","Components/Section/Section.jsx","Components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackButtons","options","onLeaveFeedback","Object","keys","map","item","className","styles","buttons","type","name","onClick","key","Stats","good","neutral","bad","total","stats","Math","round","Section","title","children","section","Notification","message","notification","App","state","handleGetFeedback","e","feedbackName","target","setState","countTotalFeedback","data","reduce","a","b","this","stateValues","values","Component","ReactDOM","render","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,qC,oKCyBlBC,EAtBS,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAAQC,EAAqB,EAArBA,gBAC9B,OACA,oCACCC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,4BACAC,UAAaC,IAAOC,QACZC,KAAO,SACPC,KAAQL,EACRM,QAAWV,EACXW,IAAOP,GACNA,Q,gBCWFQ,EArBD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,IAAIC,EAAW,EAAXA,MAC7B,OACK,6BACD,wBAAIX,UAAaC,IAAOW,OACxB,sCAAaJ,EAAb,KACA,yCAAgBC,EAAhB,KACA,qCAAWC,EAAX,MAEA,sCAAYC,EAAZ,KACA,kDAAwBE,KAAKC,MAAON,EAAOG,EAAS,KAApD,S,gBCGOI,EAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OAChB,6BAASjB,UAAaC,IAAOiB,SACrB,gCAAMF,EAAN,KACHC,I,gBCCUE,EAJM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,uBAAGpB,UAAaC,IAAOoB,cAAvB,IAAwCD,EAAxC,MCCqBE,E,4MACjBC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKTc,kBAAoB,SAAAC,GAChB,IAAMC,EAAeD,EAAEE,OAAOvB,KAC9B,EAAKwB,UAAS,SAAAL,GAAK,sBACdG,EAAeH,EAAMG,GAAgB,O,EAI9CG,mBAAqB,SAAAC,GACjB,OAAOA,EAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,uDAG3B,IAAD,EAC0BC,KAAKX,MAA5Bf,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACjByB,EAAcvC,OAAOwC,OAAOF,KAAKX,OACvC,OACI,oCACI,kBAAC,EAAD,CAASP,MAAO,yBACZ,kBAAC,EAAD,CACItB,QAASwC,KAAKX,MACd5B,gBAAiBuC,KAAKV,qBAI9B,kBAAC,EAAD,CAASR,MAAO,cACXkB,KAAKL,mBAAmBM,GAAe,EACpC,kBAAC,EAAD,CAGIxB,MAAOuB,KAAKL,mBAAmBM,GAC/B3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,IAGT,kBAAC,EAAD,CACIU,QAAS,4B,GA5CJiB,aCFjCC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.18e84a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"feedbackbuttons_buttons__1sJgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"stats_stats__2gqZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1Qcn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__l2thW\"};","import React from \"react\";\nimport styles from \"./feedbackbuttons.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackButtons = ({options,onLeaveFeedback}) => {\n    return ( \n    <> \n    {Object.keys(options).map((item) => ( \n        <button \n        className = {styles.buttons}\n                type = \"button\"\n                name = {item}\n                onClick = {onLeaveFeedback}\n                key = {item} >\n                {item} \n                </button>\n            ))} \n        </>\n    );\n};\n\nFeedbackButtons.propTypes = {\n    options: PropTypes.object.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackButtons;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./stats.module.css\";\n\nconst Stats = ({good,neutral,bad,total}) => {\n    return (\n         <div >\n        <ul className = {styles.stats} >\n        <li > Good: {good} </li> \n        <li > Neutral: {neutral} </li> \n        <li> Bad: {bad} </li> \n        </ul> \n        <p> Total: {total} </p> \n        <p> Positive feedback: {Math.round((good / total) * 100)} % </p> \n        </div>\n    );\n};\n\nStats.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n};\n\nexport default Stats;\n\n// const countTotal = (data, searchValue) => {\n//   const countTotal = Object.values(data).reduce((a, b) => a + b);\n//   return Math.round((searchValue / countTotal) * 100);\n// };\n\n// const Stats = ({ objects, searhValue }) => {\n//   return (\n//     <div>\n//       <ul>\n//         {Object.entries(objects).map(([key, values]) => (\n//           <li key={key}>\n//             {key} : {values}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <p>Positive feedback :{countTotal(objects, searhValue)}%</p>\n//     </div>\n//   );\n// };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./section.module.css\";\n\nconst Section = ({title,children}) => ( \n<section className = {styles.section} >\n        <h2> {title} </h2> \n    {children} \n        </section>\n);\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default Section;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./notification.module.css\";\n\nconst Notification = ({message}) => ( \n<p className = {styles.notification} > {message} </p>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};","import React, { Component } from 'react';\nimport FeedbackOptions from './Components/FeedbackButtons/FeedbackButtons';\nimport Stats from './Components/Statistics/Stats';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notification/Notification';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        // halo: 3,\n        // ststs: 0,\n    };\n\n    handleGetFeedback = e => {\n        const feedbackName = e.target.name;\n        this.setState(state => ({\n            [feedbackName]: state[feedbackName] + 1,\n        }));\n    };\n\n    countTotalFeedback = data => {\n        return data.reduce((a, b) => a + b);\n    };\n\n    render() {\n        const { good, neutral, bad } = this.state;\n        const stateValues = Object.values(this.state);\n        return (\n            <>\n                <Section title={'Please leave feedback'}>\n                    <FeedbackOptions\n                        options={this.state}\n                        onLeaveFeedback={this.handleGetFeedback}\n                    ></FeedbackOptions>\n                </Section>\n\n                <Section title={'Statistics'}>\n                    {this.countTotalFeedback(stateValues) > 0 ? (\n                        <Stats\n                            // objects={this.state}\n                            // searhValue={this.state.good}\n                            total={this.countTotalFeedback(stateValues)}\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                        ></Stats>\n                    ) : (\n                        <Notification\n                            message={'No feedback given'}\n                        ></Notification>\n                    )}\n                </Section>\n            </>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}
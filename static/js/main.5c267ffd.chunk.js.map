{"version":3,"sources":["Section/Section.module.css","ContactForm/contactform.module.css","Section/Section.jsx","ContactForm/ContactForm.jsx","ContactList/ContactListElem/ContactListElem.jsx","ContactList/ContactList.jsx","Filter.jsx","App.js","index.js","ContactList/ContactListElem/ContactListElem.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","contactForm","htmlFor","type","placeholder","onChange","disabled","length","Component","ContactListElem","onDelete","contactDescr","onClick","contactBtn","ContactList","contacts","map","key","style","display","Filter","App","filter","newName","toLowerCase","includes","trim","toast","configure","error","position","POSITION","TOP_CENTER","autoClose","delay","transition","Zoom","removeContact","updatedContacts","filterContactsByName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c267ffd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2E98J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactform_contactForm__29ezm\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({title,children}) => {\n    return (\n        <section className = {styles.section} >\n        <h2> {title} </h2> \n        {children} \n        </section>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import React, {\n    Component\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./contactform.module.css\";\n\nimport {\n    v4 as uuidv4\n} from \"uuid\";\n\nclass ContactForm extends Component {\n    state = {\n        name: \"\",\n        number: \"\",\n    };\n\n    handleChange = (e) => {\n        const {\n            name,\n            value\n        } = e.target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {\n            name,\n            number\n        } = this.state;\n        const contact = {\n            id: uuidv4(),\n            name: name,\n            number: number,\n        };\n        this.props.addContact(contact);\n\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: \"\",\n            number: \"\",\n        });\n    };\n\n    render() {\n        const {\n            name,\n            number\n        } = this.state;\n        return ( \n        <form onSubmit = {this.handleSubmit}\n            className = {styles.contactForm} >\n            <label htmlFor = \"nameInput\" >\n            Name:\n            <input type = \"text\"\n            name = \"name\"\n            value = {name}\n            placeholder = \"enter name...\"\n            onChange = {this.handleChange}\n            id = \"nameInput\" />\n            </label>\n\n            <label htmlFor = \"numberInput\" >\n            Number:\n            <input type = \"tel\"\n            name = \"number\"\n            value = {number}\n            placeholder = \"enter number...\"\n            onChange = {this.handleChange}\n            id = \"numberInput\" />\n            </label> \n            <button type = \"submit\"\n            disabled = {!name.length || !number.length} >\n            Add contact \n            </button> \n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    addContact: PropTypes.func.isRequired,\n};\nexport default ContactForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListElem.module.css\";\n\nconst ContactListElem = ({ name,number,onDelete}) => {\n    return ( \n    <li className = {styles.contact} >\n        <p className = {styles.contactDescr} > \n            {name}: {number} \n        </p> \n        <button type = \"button\"\n        onClick = { onDelete}\n        className = { styles.contactBtn} >\n        delete \n        </button> \n        </li>\n    );\n};\n\nContactListElem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListElem;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListElem from \"./ContactListElem/ContactListElem\";\n\nconst ContactList = ({contacts,onDelete}) => {\n    return ( \n        <ul> {\n            contacts.length ? (\n                contacts.map(({id,name,number}) => ( \n                    <ContactListElem \n                    key = {id}\n                    name = {name}\n                    number = {number}\n                    onDelete = {() => onDelete(id)}/>\n                ))\n            ) : ( \n                <p > no contact with such name in your phone </p>\n            )}\n             </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.exact({\n                id: PropTypes.string.isRequired,\n                name: PropTypes.string.isRequired,\n                number: PropTypes.string.isRequired,\n            })\n        ),\n        PropTypes.array,\n    ]),\n    onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n    display: \"block\",\n};\n\nconst Filter = ({onChange}) => {\n    return ( \n        <label htmlFor = \"filterInput\" >\n        Find contacts by name \n        <input \n        type = \"text\"\n        onChange = {onChange}\n        name = \"filter\"\n        style = {style}\n        id = \"filterInput\" />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n};\nexport default Filter;","import React, {Component} from \"react\";\nimport Section from \"./Section/Section.jsx\";\nimport ContactForm from \"./ContactForm/ContactForm.jsx\";\nimport ContactList from \"./ContactList/ContactList.jsx\";\nimport Filter from \"./Filter.jsx\";\n\nimport {\n  toast,\n  Zoom\n} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [{\n        id: \"id-1\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\"\n      },\n      {\n        id: \"id-2\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\"\n      },\n      {\n        id: \"id-3\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\"\n      },\n      {\n        id: \"id-4\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\"\n      },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      toast.configure();\n      toast.error(`${newName} is already in contact list`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 8000,\n        delay: 200,\n        transition: Zoom,\n      });\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  removeContact = (id) => {\n    const {\n      contacts\n    } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  handleChange = (e) => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterContactsByName = () => {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const {contacts} = this.state;\n    return ( \n      <>\n      <Section title = \"Phonebook\" >\n      <ContactForm addContact = {this.addContact}/> \n      </Section> \n      <Section title = \"Contacts\" > \n      {contacts.length > 1 && < Filter onChange = {this.handleChange}/>} \n        <ContactList\n        contacts = {this.filterContactsByName()}\n        onDelete = {this.removeContact}/> \n        </Section> \n        </>\n      );\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render( <\n    React.StrictMode >\n    <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListElem_contact__3uSM3\",\"contactDescr\":\"ContactListElem_contactDescr__1Sydu\",\"contactBtn\":\"ContactListElem_contactBtn__1vrST\"};"],"sourceRoot":""}
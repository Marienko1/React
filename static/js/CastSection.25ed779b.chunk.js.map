{"version":3,"sources":["components/cast.js"],"names":["Cast","state","cast","movieApi","fetchMovieCast","this","props","match","params","movieId","then","setState","map","actor","key","id","src","profile_path","alt","name","character","Component"],"mappings":"oPAKqBA,E,4MACnBC,MAAQ,CAAEC,KAAM,M,kEAEK,IAAD,OAClBC,IACGC,eAAeC,KAAKC,MAAMC,MAAMC,OAAOC,SACvCC,MAAK,SAACR,GAAD,OAAU,EAAKS,SAAS,CAAET,c,+BAG1B,IACAA,EAASG,KAAKJ,MAAdC,KACR,OACE,oCACGA,GACC,4BACGA,EAAKU,KAAI,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAAME,IACb,oCACE,yBACEC,IACEH,EAAMI,aAAN,0CACuCJ,EAAMI,cAD7C,UAtBH,wDA0BCC,IAAKL,EAAME,KAEb,2BAAIF,EAAMM,MACV,yCAAeN,EAAMO,sB,GA3BLC","file":"static/js/CastSection.25ed779b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport movieApi from \"../services/movieApi\";\n\nconst damagedImg = \"https://static.thenounproject.com/png/340719-200.png\";\n\nexport default class Cast extends Component {\n  state = { cast: null };\n\n  componentDidMount() {\n    movieApi\n      .fetchMovieCast(this.props.match.params.movieId)\n      .then((cast) => this.setState({ cast }));\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <>\n        {cast && (\n          <ul>\n            {cast.map((actor) => (\n              <li key={actor.id}>\n                <>\n                  <img\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w154/${actor.profile_path}`\n                        : `${damagedImg}`\n                    }\n                    alt={actor.id}\n                  />\n                  <p>{actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                </>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}
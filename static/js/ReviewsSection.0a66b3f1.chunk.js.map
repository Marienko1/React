{"version":3,"sources":["components/reviews.js"],"names":["Reviews","state","reviews","movieApi","fetchMovieReviews","this","props","match","params","movieId","then","setState","length","map","review","key","id","author","content","Component"],"mappings":"oPAGqBA,E,4MACnBC,MAAQ,CACNC,QAAS,I,kEAGU,IAAD,OAClBC,IACGC,kBAAkBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC1CC,MAAK,SAACR,GAAD,OAAa,EAAKS,SAAS,CAAET,iB,+BAG7B,IACAA,EAAYG,KAAKJ,MAAjBC,QACR,OACE,oCACGA,EAAQU,OAAS,EAChB,4BACGV,EAAQW,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAOE,IACd,oCACE,uCAAaF,EAAOG,QACpB,2BAAIH,EAAOI,eAMnB,4E,GA3B2BC","file":"static/js/ReviewsSection.0a66b3f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport movieApi from \"../services/movieApi\";\n\nexport default class Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    movieApi\n      .fetchMovieReviews(this.props.match.params.movieId)\n      .then((reviews) => this.setState({ reviews }));\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <>\n                  <h3>Author: {review.author}</h3>\n                  <p>{review.content}</p>\n                </>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>Oops, there is no reviews for this movie</p>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}